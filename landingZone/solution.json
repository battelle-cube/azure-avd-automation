{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1008.15138",
      "templateHash": "2660793390916825866"
    }
  },
  "parameters": {
    "DomainName": {
      "type": "string",
      "defaultValue": "jasonmasten.us"
    },
    "DomainServices": {
      "type": "string",
      "allowedValues": [
        "ActiveDirectory",
        "AzureActiveDirectory",
        "None"
      ]
    },
    "Environment": {
      "type": "string",
      "defaultValue": "d"
    },
    "Location": {
      "type": "string",
      "defaultValue": "usgovvirginia"
    },
    "LocationAbbr": {
      "type": "string",
      "defaultValue": "va"
    },
    "ProjAppSvc": {
      "type": "array",
      "defaultValue": [
        "id",
        "net",
        "svc"
      ]
    },
    "Timestamp": {
      "type": "string",
      "defaultValue": "[utcNow('yyyyMMddhhmmss')]"
    },
    "UnitDept": {
      "type": "string",
      "defaultValue": "shd"
    },
    "UserObjectId": {
      "type": "string",
      "metadata": {
        "description": "The Object ID for the Azure AD User Principal to give admin permissions to the Key Vault"
      }
    },
    "VmPassword": {
      "type": "secureString",
      "metadata": {
        "description": "Azure VM password"
      }
    },
    "VmUsername": {
      "type": "string",
      "metadata": {
        "description": "Azure VM username"
      }
    }
  },
  "functions": [],
  "variables": {
    "BastionName": "[format('bastion-{0}-{1}-{2}-{3}', parameters('UnitDept'), parameters('ProjAppSvc')[1], parameters('Environment'), parameters('LocationAbbr'))]",
    "DomainControllerName": "[format('vm{0}{1}{2}{3}dc', parameters('UnitDept'), parameters('ProjAppSvc')[0], parameters('Environment'), parameters('LocationAbbr'))]",
    "DomainControllerDiskName": "[format('disk-{0}-{1}-{2}-{3}-dc', parameters('UnitDept'), parameters('ProjAppSvc')[0], parameters('Environment'), parameters('LocationAbbr'))]",
    "DomainControllerNicName": "[format('nic-{0}-{1}-{2}-{3}-dc', parameters('UnitDept'), parameters('ProjAppSvc')[0], parameters('Environment'), parameters('LocationAbbr'))]",
    "KeyVaultName": "[format('kv-{0}-{1}-{2}-{3}', parameters('UnitDept'), parameters('ProjAppSvc')[0], parameters('Environment'), parameters('LocationAbbr'))]",
    "LogAnalyticsWorkspaceName": "[format('law-{0}-{1}-{2}-{3}', parameters('UnitDept'), parameters('ProjAppSvc')[1], parameters('Environment'), parameters('LocationAbbr'))]",
    "ManagedIdentityName": "[format('uami-{0}-{1}-{2}-{3}', parameters('UnitDept'), parameters('ProjAppSvc')[1], parameters('Environment'), parameters('LocationAbbr'))]",
    "NetworkContributorId": "4d97b98b-1d4f-4787-a291-c67834d212e7",
    "NetworkWatcherName": "[format('nw-{0}-{1}-{2}-{3}', parameters('UnitDept'), parameters('ProjAppSvc')[1], parameters('Environment'), parameters('LocationAbbr'))]",
    "PublicIpAddressName": "[format('pip-bastion-{0}-{1}{2}-{3}', parameters('UnitDept'), parameters('ProjAppSvc')[1], parameters('Environment'), parameters('LocationAbbr'))]",
    "ResourceGroupNames": [
      "[format('rg-{0}-{1}-{2}-{3}', parameters('UnitDept'), parameters('ProjAppSvc')[0], parameters('Environment'), parameters('LocationAbbr'))]",
      "[format('rg-{0}-{1}-{2}-{3}', parameters('UnitDept'), parameters('ProjAppSvc')[1], parameters('Environment'), parameters('LocationAbbr'))]",
      "[format('rg-{0}-{1}-{2}-{3}', parameters('UnitDept'), parameters('ProjAppSvc')[2], parameters('Environment'), parameters('LocationAbbr'))]"
    ],
    "VnetName": "[format('vnet-{0}-{1}-{2}-{3}', parameters('UnitDept'), parameters('ProjAppSvc')[1], parameters('Environment'), parameters('LocationAbbr'))]"
  },
  "resources": [
    {
      "copy": {
        "name": "resourceGroups",
        "count": "[length(variables('ResourceGroupNames'))]"
      },
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[variables('ResourceGroupNames')[copyIndex()]]",
      "location": "[parameters('Location')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "ManagedIdentityTemplate",
      "resourceGroup": "[variables('ResourceGroupNames')[0]]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "Location": {
            "value": "[parameters('Location')]"
          },
          "ManagedIdentityName": {
            "value": "[variables('ManagedIdentityName')]"
          },
          "NetworkContributorId": {
            "value": "[variables('NetworkContributorId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1008.15138",
              "templateHash": "16537821399602921828"
            }
          },
          "parameters": {
            "Location": {
              "type": "string"
            },
            "ManagedIdentityName": {
              "type": "string"
            },
            "NetworkContributorId": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "RoleAssignmentName": "[guid(resourceGroup().name, parameters('ManagedIdentityName'), parameters('NetworkContributorId'))]"
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "[parameters('ManagedIdentityName')]",
              "location": "[parameters('Location')]"
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "name": "[variables('RoleAssignmentName')]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('NetworkContributorId'))]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('ManagedIdentityName')), '2018-11-30').principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('ManagedIdentityName'))]"
              ]
            }
          ],
          "outputs": {
            "principalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('ManagedIdentityName')), '2018-11-30').principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "resourceGroups"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "NetworkingTemplate",
      "resourceGroup": "[variables('ResourceGroupNames')[1]]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "BastionName": {
            "value": "[variables('BastionName')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "ManagedIdentityName": {
            "value": "[variables('ManagedIdentityName')]"
          },
          "NetworkContributorId": {
            "value": "[variables('NetworkContributorId')]"
          },
          "NetworkWatcherName": {
            "value": "[variables('NetworkWatcherName')]"
          },
          "PrincipalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroupNames')[0]), 'Microsoft.Resources/deployments', 'ManagedIdentityTemplate'), '2020-06-01').outputs.principalId.value]"
          },
          "PublicIpAddressName": {
            "value": "[variables('PublicIpAddressName')]"
          },
          "VnetName": {
            "value": "[variables('VnetName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1008.15138",
              "templateHash": "9842787953392771138"
            }
          },
          "parameters": {
            "BastionName": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "ManagedIdentityName": {
              "type": "string"
            },
            "NetworkContributorId": {
              "type": "string"
            },
            "NetworkWatcherName": {
              "type": "string"
            },
            "PrincipalId": {
              "type": "string"
            },
            "PublicIpAddressName": {
              "type": "string"
            },
            "VnetName": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "RoleAssignmentName": "[guid(resourceGroup().name, parameters('ManagedIdentityName'), parameters('NetworkContributorId'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "name": "[variables('RoleAssignmentName')]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
                "principalId": "[parameters('PrincipalId')]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "type": "Microsoft.Network/networkWatchers",
              "apiVersion": "2021-02-01",
              "name": "[parameters('NetworkWatcherName')]",
              "location": "[parameters('Location')]",
              "properties": {}
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2020-11-01",
              "name": "adds-subnet",
              "location": "[parameters('Location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "AllowSyncWithAzureAD",
                    "properties": {
                      "access": "Allow",
                      "destinationAddressPrefixes": [],
                      "priority": 101,
                      "direction": "Inbound",
                      "protocol": "Tcp",
                      "sourceAddressPrefix": "AzureActiveDirectoryDomainServices",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "443",
                      "destinationPortRanges": [],
                      "sourcePortRanges": [],
                      "destinationApplicationSecurityGroups": [],
                      "sourceApplicationSecurityGroups": []
                    }
                  },
                  {
                    "name": "AllowPSRemoting",
                    "properties": {
                      "access": "Allow",
                      "destinationAddressPrefixes": [],
                      "priority": 301,
                      "direction": "Inbound",
                      "protocol": "Tcp",
                      "sourceAddressPrefix": "AzureActiveDirectoryDomainServices",
                      "sourcePortRange": "*",
                      "sourcePortRanges": [],
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "5986",
                      "destinationPortRanges": [],
                      "destinationApplicationSecurityGroups": [],
                      "sourceApplicationSecurityGroups": []
                    }
                  },
                  {
                    "name": "AllowRD",
                    "properties": {
                      "access": "Allow",
                      "destinationAddressPrefixes": [],
                      "priority": 201,
                      "direction": "Inbound",
                      "protocol": "Tcp",
                      "sourceAddressPrefix": "CorpNetSaw",
                      "sourcePortRange": "*",
                      "sourcePortRanges": [],
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "3389",
                      "destinationPortRanges": [],
                      "destinationApplicationSecurityGroups": [],
                      "sourceApplicationSecurityGroups": []
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2021-02-01",
              "name": "[parameters('VnetName')]",
              "location": "[parameters('Location')]",
              "tags": {},
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "10.0.0.0/21"
                  ]
                },
                "subnets": [
                  {
                    "name": "AzureADDSSubnet",
                    "properties": {
                      "addressPrefix": "10.0.0.0/24",
                      "delegations": [],
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'adds-subnet')]"
                      },
                      "privateEndpointNetworkPolicies": "Enabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "AzureBastionSubnet",
                    "properties": {
                      "addressPrefix": "10.0.1.0/24",
                      "serviceEndpoints": [],
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Enabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "AzureNetAppFiles",
                    "properties": {
                      "addressPrefix": "10.0.2.0/24",
                      "delegations": [
                        {
                          "name": "Microsoft.Netapp.Volumes",
                          "properties": {
                            "serviceName": "Microsoft.Netapp/volumes"
                          }
                        }
                      ],
                      "privateEndpointNetworkPolicies": "Enabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "SharedServices",
                    "properties": {
                      "addressPrefix": "10.0.3.0/24",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Enabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "Servers",
                    "properties": {
                      "addressPrefix": "10.0.4.0/24",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Enabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "Clients",
                    "properties": {
                      "addressPrefix": "10.0.5.0/24",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Enabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'adds-subnet')]",
                "[resourceId('Microsoft.Network/networkWatchers', parameters('NetworkWatcherName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2020-11-01",
              "name": "[parameters('PublicIpAddressName')]",
              "location": "[parameters('Location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4
              }
            },
            {
              "type": "Microsoft.Network/bastionHosts",
              "apiVersion": "2020-05-01",
              "name": "[parameters('BastionName')]",
              "location": "[parameters('Location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "IpConf",
                    "properties": {
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('PublicIpAddressName'))]"
                      },
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('VnetName'), 'AzureBastionSubnet')]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('PublicIpAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('VnetName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroupNames')[0]), 'Microsoft.Resources/deployments', 'ManagedIdentityTemplate')]",
        "resourceGroups"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "DomainServicesTemplate",
      "resourceGroup": "[variables('ResourceGroupNames')[0]]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "DomainControllerName": {
            "value": "[variables('DomainControllerName')]"
          },
          "DomainControllerDiskName": {
            "value": "[variables('DomainControllerDiskName')]"
          },
          "DomainControllerNicName": {
            "value": "[variables('DomainControllerNicName')]"
          },
          "DomainName": {
            "value": "[parameters('DomainName')]"
          },
          "DomainServices": {
            "value": "[parameters('DomainServices')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "ResourceGroupNames": {
            "value": "[variables('ResourceGroupNames')]"
          },
          "VmPassword": {
            "value": "[parameters('VmPassword')]"
          },
          "VmUsername": {
            "value": "[parameters('VmUsername')]"
          },
          "VnetName": {
            "value": "[variables('VnetName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1008.15138",
              "templateHash": "7996143658894267947"
            }
          },
          "parameters": {
            "DomainControllerName": {
              "type": "string"
            },
            "DomainControllerDiskName": {
              "type": "string"
            },
            "DomainControllerNicName": {
              "type": "string"
            },
            "DomainName": {
              "type": "string"
            },
            "DomainServices": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "ResourceGroupNames": {
              "type": "array"
            },
            "VmPassword": {
              "type": "secureString"
            },
            "VmUsername": {
              "type": "string"
            },
            "VnetName": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "condition": "[equals(parameters('DomainServices'), 'AzureActiveDirectory')]",
              "type": "Microsoft.AAD/domainServices",
              "apiVersion": "2021-03-01",
              "name": "[parameters('DomainName')]",
              "location": "[parameters('Location')]",
              "properties": {
                "domainName": "[parameters('DomainName')]",
                "filteredSync": "Disabled",
                "domainConfigurationType": "FullySynced",
                "notificationSettings": {
                  "notifyGlobalAdmins": "Enabled",
                  "notifyDcAdmins": "Enabled",
                  "additionalRecipients": []
                },
                "replicaSets": [
                  {
                    "subnetId": "[resourceId(parameters('ResourceGroupNames')[1], 'Microsoft.Network/virtualNetworks/subnets', parameters('VnetName'), 'AzureADDSSubnet')]",
                    "location": "[parameters('Location')]"
                  }
                ],
                "sku": "Standard"
              }
            },
            {
              "condition": "[equals(parameters('DomainServices'), 'ActiveDirectory')]",
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2018-08-01",
              "name": "[parameters('DomainControllerNicName')]",
              "location": "[parameters('Location')]",
              "tags": {},
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipConfig0",
                    "properties": {
                      "privateIPAllocationMethod": "Static",
                      "privateIPAddress": "10.0.3.4",
                      "subnet": {
                        "id": "[resourceId(parameters('ResourceGroupNames')[1], 'Microsoft.Network/virtualNetworks/subnets', parameters('VnetName'), 'SharedServices')]"
                      }
                    }
                  }
                ]
              }
            },
            {
              "condition": "[equals(parameters('DomainServices'), 'ActiveDirectory')]",
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2019-07-01",
              "name": "[parameters('DomainControllerName')]",
              "location": "[parameters('Location')]",
              "properties": {
                "hardwareProfile": {
                  "vmSize": "Standard_B2s"
                },
                "osProfile": {
                  "computerName": "[parameters('DomainControllerName')]",
                  "adminUsername": "[parameters('VmUsername')]",
                  "adminPassword": "[parameters('VmPassword')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2019-Datacenter",
                    "version": "latest"
                  },
                  "osDisk": {
                    "name": "[parameters('DomainControllerDiskName')]",
                    "caching": "None",
                    "createOption": "FromImage",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS"
                    }
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('DomainControllerNicName'))]"
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": false
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('DomainControllerNicName'))]"
              ]
            },
            {
              "condition": "[equals(parameters('DomainServices'), 'ActiveDirectory')]",
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2019-07-01",
              "name": "[format('{0}/{1}', parameters('DomainControllerName'), 'DSC')]",
              "location": "[parameters('Location')]",
              "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.77",
                "autoUpgradeMinorVersion": true,
                "protectedSettings": {
                  "Items": {
                    "VmPassword": "[parameters('VmPassword')]"
                  }
                },
                "settings": {
                  "wmfVersion": "latest",
                  "modulesUrl": "https://github.com/battelle-cube/terraform-cube-avd/blob/main/landingZone/dsc/ActiveDirectoryForest.zip?raw=true",
                  "configurationFunction": "ActiveDirectoryForest.ps1\\ActiveDirectoryForest",
                  "properties": [
                    {
                      "Name": "Domain",
                      "Value": "[parameters('DomainName')]",
                      "TypeName": "System.String"
                    },
                    {
                      "Name": "DomainCreds",
                      "Value": {
                        "UserName": "[parameters('VmUsername')]",
                        "Password": "PrivateSettingsRef:VmPassword"
                      },
                      "TypeName": "System.Management.Automation.PSCredential"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('DomainControllerName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroupNames')[1]), 'Microsoft.Resources/deployments', 'NetworkingTemplate')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "DnsFixTemplate",
      "resourceGroup": "[variables('ResourceGroupNames')[0]]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "DomainServices": {
            "value": "[parameters('DomainServices')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "ManagedIdentityName": {
            "value": "[variables('ManagedIdentityName')]"
          },
          "ResourceGroupNames": {
            "value": "[variables('ResourceGroupNames')]"
          },
          "Timestamp": {
            "value": "[parameters('Timestamp')]"
          },
          "VnetName": {
            "value": "[variables('VnetName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1008.15138",
              "templateHash": "17371178281852295328"
            }
          },
          "parameters": {
            "DomainServices": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "ManagedIdentityName": {
              "type": "string"
            },
            "ResourceGroupNames": {
              "type": "array"
            },
            "Timestamp": {
              "type": "string"
            },
            "VnetName": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "condition": "[equals(parameters('DomainServices'), 'ActiveDirectory')]",
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "DnsFixAdds",
              "location": "[parameters('Location')]",
              "kind": "AzurePowerShell",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('ManagedIdentityName')))]": {}
                }
              },
              "properties": {
                "forceUpdateTag": "[parameters('Timestamp')]",
                "azPowerShellVersion": "5.4",
                "arguments": "[format('-ResourceGroupName {0} -VnetName {1}', parameters('ResourceGroupNames')[1], parameters('VnetName'))]",
                "scriptContent": "param([string] [parameter(Mandatory=$true)] $ResourceGroupName, [string] [parameter(Mandatory=$true)] $VnetName);Start-Sleep 300;$vnet = Get-AzVirtualNetwork -Name $VnetName -ResourceGroupName $ResourceGroupName;$subnet = Get-AzVirtualNetworkSubnetConfig -Name 'SharedServices' -VirtualNetwork $vnet;if ($null -ne $subnet.IpConfigurations){$dnsIPs = @();foreach ($ipconfig in $subnet.IpConfigurations) {$RG = $ipconfig.Id.Split('/')[4];$NIC = $ipconfig.Id.Split('/')[8];$IP = (Get-AzNetworkInterface -Name $NIC -ResourceGroupName $RG).IpConfigurations.PrivateIpAddress;$dnsIPs += $IP}};$obj = new-object -type PSObject -Property @{'DnsServers' = $dnsIPs};$vnet.DhcpOptions = $obj;$vnet | Set-AzVirtualNetwork | Out-Null;$DeploymentScriptOutputs = @{};",
                "timeout": "PT4H",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D"
              }
            },
            {
              "condition": "[equals(parameters('DomainServices'), 'AzureActiveDirectory')]",
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "DnsFixAzureAdds",
              "location": "[parameters('Location')]",
              "kind": "AzurePowerShell",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('ManagedIdentityName')))]": {}
                }
              },
              "properties": {
                "forceUpdateTag": "[parameters('Timestamp')]",
                "azPowerShellVersion": "5.4",
                "arguments": "[format('-ResourceGroupName {0} -VnetName {1}', parameters('ResourceGroupNames')[1], parameters('VnetName'))]",
                "scriptContent": "param([string] [parameter(Mandatory=$true)] $ResourceGroupName, [string] [parameter(Mandatory=$true)] $VnetName);Start-Sleep 300;$vnet = Get-AzVirtualNetwork -Name $VnetName -ResourceGroupName $ResourceGroupName;$subnet = Get-AzVirtualNetworkSubnetConfig -Name 'AzureADDSSubnet' -VirtualNetwork $vnet;if ($null -ne $subnet.IpConfigurations){$dnsIPs = @();foreach ($ipconfig in $subnet.IpConfigurations) {$RG = $ipconfig.Id.Split('/')[4];$NIC = $ipconfig.Id.Split('/')[8];$IP = (Get-AzNetworkInterface -Name $NIC -ResourceGroupName $RG).IpConfigurations.PrivateIpAddress;$dnsIPs += $IP}};$obj = new-object -type PSObject -Property @{'DnsServers' = $dnsIPs};$vnet.DhcpOptions = $obj;$vnet | Set-AzVirtualNetwork | Out-Null;$DeploymentScriptOutputs = @{};",
                "timeout": "PT4H",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroupNames')[0]), 'Microsoft.Resources/deployments', 'DomainServicesTemplate')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroupNames')[1]), 'Microsoft.Resources/deployments', 'NetworkingTemplate')]",
        "resourceGroups"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "SharedServicesTemplate",
      "resourceGroup": "[variables('ResourceGroupNames')[2]]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "DomainName": {
            "value": "[parameters('DomainName')]"
          },
          "KeyVaultName": {
            "value": "[variables('KeyVaultName')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "LogAnalyticsWorkspaceName": {
            "value": "[variables('LogAnalyticsWorkspaceName')]"
          },
          "ManagedIdentityPrincipalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroupNames')[0]), 'Microsoft.Resources/deployments', 'ManagedIdentityTemplate'), '2020-06-01').outputs.principalId.value]"
          },
          "UserObjectId": {
            "value": "[parameters('UserObjectId')]"
          },
          "VmPassword": {
            "value": "[parameters('VmPassword')]"
          },
          "VmUsername": {
            "value": "[parameters('VmUsername')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1008.15138",
              "templateHash": "17497261849451238096"
            }
          },
          "parameters": {
            "DomainName": {
              "type": "string"
            },
            "KeyVaultName": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "LogAnalyticsWorkspaceName": {
              "type": "string"
            },
            "ManagedIdentityPrincipalId": {
              "type": "string"
            },
            "UserObjectId": {
              "type": "string"
            },
            "VmPassword": {
              "type": "secureString"
            },
            "VmUsername": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2016-10-01",
              "name": "[parameters('KeyVaultName')]",
              "location": "[parameters('Location')]",
              "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "accessPolicies": [
                  {
                    "tenantId": "[subscription().tenantId]",
                    "objectId": "[parameters('UserObjectId')]",
                    "permissions": {
                      "keys": [
                        "encrypt",
                        "decrypt",
                        "wrapKey",
                        "unwrapKey",
                        "sign",
                        "verify",
                        "get",
                        "list",
                        "create",
                        "update",
                        "import",
                        "delete",
                        "backup",
                        "restore",
                        "recover",
                        "purge"
                      ],
                      "secrets": [
                        "get",
                        "list",
                        "set",
                        "delete",
                        "backup",
                        "restore",
                        "recover",
                        "purge"
                      ]
                    }
                  },
                  {
                    "tenantId": "[subscription().tenantId]",
                    "objectId": "[parameters('ManagedIdentityPrincipalId')]",
                    "permissions": {
                      "keys": [
                        "encrypt",
                        "decrypt",
                        "wrapKey",
                        "unwrapKey",
                        "sign",
                        "verify",
                        "get",
                        "list",
                        "create",
                        "update",
                        "import",
                        "delete",
                        "backup",
                        "restore",
                        "recover",
                        "purge"
                      ],
                      "secrets": [
                        "get",
                        "list",
                        "set",
                        "delete",
                        "backup",
                        "restore",
                        "recover",
                        "purge"
                      ]
                    }
                  }
                ],
                "enabledForDeployment": true,
                "enabledForTemplateDeployment": true,
                "enabledForDiskEncryption": true
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2016-10-01",
              "name": "[format('{0}/{1}', parameters('KeyVaultName'), 'VmPassword')]",
              "properties": {
                "value": "[parameters('VmPassword')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('KeyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2016-10-01",
              "name": "[format('{0}/{1}', parameters('KeyVaultName'), 'VmUsername')]",
              "properties": {
                "value": "[parameters('VmUsername')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('KeyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2016-10-01",
              "name": "[format('{0}/{1}', parameters('KeyVaultName'), 'DomainJoinPassword')]",
              "properties": {
                "value": "[parameters('VmPassword')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('KeyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2016-10-01",
              "name": "[format('{0}/{1}', parameters('KeyVaultName'), 'DomainJoinUsername')]",
              "properties": {
                "value": "[format('{0}@{1}', parameters('VmUsername'), parameters('DomainName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('KeyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2020-03-01-preview",
              "name": "[parameters('LogAnalyticsWorkspaceName')]",
              "location": "[parameters('Location')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                },
                "retentionInDays": 30,
                "workspaceCapping": {
                  "dailyQuotaGb": -1
                },
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroupNames')[0]), 'Microsoft.Resources/deployments', 'ManagedIdentityTemplate')]",
        "resourceGroups"
      ]
    }
  ]
}
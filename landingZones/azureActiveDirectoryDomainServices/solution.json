{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "DomainName": {
      "type": "string",
      "defaultValue": "jasonmasten.com"
    },
    "Environment": {
      "type": "string",
      "defaultValue": "d"
    },
    "Instance": {
      "type": "string",
      "defaultValue": "000"
    },
    "Location": {
      "type": "string",
      "defaultValue": "eastus"
    },
    "LocationAbbr": {
      "type": "string",
      "defaultValue": "eu"
    },
    "ProjAppSvc": {
      "type": "array",
      "defaultValue": [
        "id",
        "net"
      ]
    },
    "Timestamp": {
      "type": "string",
      "defaultValue": "[utcNow('yyyyMMddhhmmss')]"
    },
    "UnitDept": {
      "type": "string",
      "defaultValue": "shd"
    }
  },
  "variables": {
    "BastionName": "[concat('bastion-', parameters('UnitDept'),'-', parameters('ProjAppSvc')[1], '-', parameters('Environment'), '-', parameters('LocationAbbr'), '-', parameters('Instance'))]",
    "ManagedIdentityName": "[concat('uami-', parameters('UnitDept'),'-', parameters('ProjAppSvc')[1], '-', parameters('Environment'), '-', parameters('LocationAbbr'), '-', parameters('Instance'))]",
    "NetworkContributorId": "4d97b98b-1d4f-4787-a291-c67834d212e7",
    "NetworkWatcherName": "[concat('nw-', parameters('UnitDept'),'-', parameters('ProjAppSvc')[1], '-', parameters('Environment'), '-', parameters('LocationAbbr'), '-', parameters('Instance'))]",
    "PublicIpAddressName": "[concat('pip-bastion-', parameters('UnitDept'),'-', parameters('ProjAppSvc')[1], parameters('Environment'), '-', parameters('LocationAbbr'), '-', parameters('Instance'))]",
    "ResourceGroupNames": [
      "[concat('rg-', parameters('UnitDept'),'-', parameters('ProjAppSvc')[0], '-', parameters('Environment'),'-', parameters('LocationAbbr'), '-', parameters('Instance'))]",
      "[concat('rg-', parameters('UnitDept'),'-', parameters('ProjAppSvc')[1], '-', parameters('Environment'),'-', parameters('LocationAbbr'), '-', parameters('Instance'))]"
    ],
    "VnetName": "[concat('vnet-', parameters('UnitDept'), '-', parameters('ProjAppSvc')[1], '-', parameters('Environment'), '-', parameters('LocationAbbr'), '-', parameters('Instance'))]"
  },
  "resources": [
    {
      "comments": "---------- RESOURCE GROUPS ----------",
      "name": "[variables('ResourceGroupNames')[copyIndex()]]",
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "location": "[parameters('Location')]",
      "tags": {},
      "properties": {},
      "copy": {
        "name": "rgLoop",
        "count": "[length(variables('ResourceGroupNames'))]"
      }
    },
    {
      "name": "ManagedIdentityTemplate",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "resourceGroup": "[variables('ResourceGroupNames')[0]]",
      "dependsOn": [
        "rgLoop"
      ],
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "parameters": {
          "Location": {
            "value": "[parameters('Location')]"
          },
          "ManagedIdentityName": {
            "value": "[variables('ManagedIdentityName')]"
          },
          "NetworkContributorId": {
            "value": "[variables('NetworkContributorId')]"
          }
        },
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "Location": {
              "type": "string"
            },
            "ManagedIdentityName": {
              "type": "string"
            },
            "NetworkContributorId": {
              "type": "string"
            }
          },
          "variables": {
            "RoleAssignmentName": "[guid(resourceGroup().name, parameters('ManagedIdentityName'), parameters('NetworkContributorId'))]"
          },
          "resources": [
            {
              "comments": "---------- USER ASSIGNED MANAGED IDENTITY ----------",
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "name": "[parameters('ManagedIdentityName')]",
              "apiVersion": "2018-11-30",
              "location": "[parameters('Location')]"
            },
            {
              "comments": "---------- ROLE ASSIGNMENT > RESOURCE GROUP > NETWORK CONTRIBUTOR ----------",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "name": "[variables('RoleAssignmentName')]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('NetworkContributorId'))]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('ManagedIdentityName')), '2018-11-30').principalId]",
                "principalType": "ServicePrincipal"
              }
            }
          ],
          "outputs": {
            "principalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('ManagedIdentityName')), '2018-11-30').principalId]"
            }
          }
        }
      }
    },
    {
      "name": "RoleAssignmentTemplate",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroupNames')[0]), 'Microsoft.Resources/deployments', 'ManagedIdentityTemplate')]"
      ],
      "resourceGroup": "[variables('ResourceGroupNames')[1]]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "PrincipalId": {
            "value": "[reference('ManagedIdentityTemplate').outputs.principalId.value]"
          },
          "ManagedIdentityName": {
            "value": "[variables('ManagedIdentityName')]"
          },
          "NetworkContributorId": {
            "value": "[variables('NetworkContributorId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "PrincipalId": {
              "type": "string"
            },
            "ManagedIdentityName": {
              "type": "string"
            },
            "NetworkContributorId": {
              "type": "string"
            }
          },
          "variables": {
            "RoleAssignmentName": "[guid(resourceGroup().name, parameters('ManagedIdentityName'), parameters('NetworkContributorId'))]"
          },
          "resources": [
            {
              "comments": "---------- ROLE ASSIGNMENT > RESOURCE GROUP > NETWORK CONTRIBUTOR ----------",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "name": "[variables('RoleAssignmentName')]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
                "principalId": "[parameters('PrincipalId')]",
                "principalType": "ServicePrincipal"
              }
            }
          ]
        }
      }
    },
    {
      "name": "NetworkingTemplate",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "dependsOn": [
        "rgLoop"
      ],
      "resourceGroup": "[variables('ResourceGroupNames')[1]]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "BastionName": {
            "value": "[variables('BastionName')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "NetworkWatcherName": {
            "value": "[variables('NetworkWatcherName')]"
          },
          "PublicIpAddressName": {
            "value": "[variables('PublicIpAddressName')]"
          },
          "VnetName": {
            "value": "[variables('VnetName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "BastionName": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "NetworkWatcherName": {
              "type": "string"
            },
            "PublicIpAddressName": {
              "type": "string"
            },
            "VnetName": {
              "type": "string"
            }
          },
          "variables": {},
          "resources": [
            {
              "comments": "---------- NETWORK WATCHER ----------",
              "type": "Microsoft.Network/networkWatchers",
              "apiVersion": "2021-02-01",
              "name": "[parameters('NetworkWatcherName')]",
              "location": "[parameters('Location')]",
              "properties": {}
            },
            {
              "comments": "---------- NETWORK SECURITY GROUP ----------",
              "name": "adds-subnet",
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2020-11-01",
              "location": "[parameters('Location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "AllowSyncWithAzureAD",
                    "properties": {
                      "access": "Allow",
                      "destinationAddressPrefixes": [],
                      "priority": 101,
                      "direction": "Inbound",
                      "protocol": "Tcp",
                      "sourceAddressPrefix": "AzureActiveDirectoryDomainServices",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "443",
                      "destinationPortRanges": [],
                      "sourcePortRanges": [],
                      "destinationApplicationSecurityGroups": [],
                      "sourceApplicationSecurityGroups": []
                    }
                  },
                  {
                    "name": "AllowPSRemoting",
                    "properties": {
                      "access": "Allow",
                      "destinationAddressPrefixes": [],
                      "priority": 301,
                      "direction": "Inbound",
                      "protocol": "Tcp",
                      "sourceAddressPrefix": "AzureActiveDirectoryDomainServices",
                      "sourcePortRange": "*",
                      "sourcePortRanges": [],
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "5986",
                      "destinationPortRanges": [],
                      "destinationApplicationSecurityGroups": [],
                      "sourceApplicationSecurityGroups": []
                    }
                  },
                  {
                    "name": "AllowRD",
                    "properties": {
                      "access": "Allow",
                      "destinationAddressPrefixes": [],
                      "priority": 201,
                      "direction": "Inbound",
                      "protocol": "Tcp",
                      "sourceAddressPrefix": "CorpNetSaw",
                      "sourcePortRange": "*",
                      "sourcePortRanges": [],
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "3389",
                      "destinationPortRanges": [],
                      "destinationApplicationSecurityGroups": [],
                      "sourceApplicationSecurityGroups": []
                    }
                  }
                ]
              }
            },
            {
              "comments": "---------- VIRTUAL NETWORK ----------",
              "name": "[parameters('VnetName')]",
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2021-02-01",
              "location": "[parameters('Location')]",
              "tags": {},
              "dependsOn": [
                "[parameters('NetworkWatcherName')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'adds-subnet')]"
              ],
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "10.0.0.0/21"
                  ]
                },
                "subnets": [
                  {
                    "name": "AzureADDSSubnet",
                    "properties": {
                      "addressPrefix": "10.0.0.0/24",
                      "delegations": [],
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'adds-subnet')]"
                      },
                      "privateEndpointNetworkPolicies": "Enabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "AzureBastionSubnet",
                    "properties": {
                      "addressPrefix": "10.0.1.0/24",
                      "serviceEndpoints": [],
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Enabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "SharedServices",
                    "properties": {
                      "addressPrefix": "10.0.2.0/24",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Enabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "Servers",
                    "properties": {
                      "addressPrefix": "10.0.3.0/24",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Enabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "Clients",
                    "properties": {
                      "addressPrefix": "10.0.4.0/24",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Enabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  }
                ],
                "virtualNetworkPeerings": [
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
              }
            },
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2020-11-01",
              "name": "[parameters('PublicIpAddressName')]",
              "location": "[parameters('Location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4
              }
            },
            {
              "type": "Microsoft.Network/bastionHosts",
              "apiVersion": "2020-05-01",
              "name": "[parameters('BastionName')]",
              "location": "[parameters('Location')]",
              "dependsOn": [
                "[parameters('VnetName')]",
                "[parameters('PublicIpAddressName')]"
              ],
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "IpConf",
                    "properties": {
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('PublicIpAddressName'))]"
                      },
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('VnetName'), 'AzureBastionSubnet')]"
                      }
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    {
      "name": "DomainServicesTemplate",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "resourceGroup": "[variables('ResourceGroupNames')[0]]",
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroupNames')[1]), 'Microsoft.Resources/deployments', 'NetworkingTemplate')]"
      ],
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "parameters": {
          "DomainName": {
            "value": "[parameters('DomainName')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "ResourceGroupNames": {
            "value": "[variables('ResourceGroupNames')]"
          },
          "VnetName": {
            "value": "[variables('VnetName')]"
          }
        },
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "DomainName": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "ResourceGroupNames": {
              "type": "array"
            },
            "VnetName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.AAD/DomainServices",
              "name": "[parameters('DomainName')]",
              "apiVersion": "2021-03-01",
              "location": "[parameters('location')]",
              "properties": {
                "domainName": "[parameters('DomainName')]",
                "filteredSync": "Disabled",
                "domainConfigurationType": "FullySynced",
                "notificationSettings": {
                  "notifyGlobalAdmins": "Enabled",
                  "notifyDcAdmins": "Enabled",
                  "additionalRecipients": []
                },
                "replicaSets": [
                  {
                    "subnetId": "[resourceId(parameters('ResourceGroupNames')[1], 'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'),'AzureADDSSubnet')]",
                    "location": "[parameters('location')]"
                  }
                ],
                "sku": "Standard"
              }
            }
          ]
        }
      }
    },
    {
      "name": "DnsAndAdminGroupTemplate",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "resourceGroup": "[variables('ResourceGroupNames')[0]]",
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroupNames')[0]), 'Microsoft.Resources/deployments', 'DomainServicesTemplate')]"
      ],
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "parameters": {
          "Location": {
            "value": "[parameters('Location')]"
          },
          "ManagedIdentityName": {
            "value": "[variables('ManagedIdentityName')]"
          },
          "ResourceGroupNames": {
            "value": "[variables('ResourceGroupNames')]"
          },
          "Timestamp": {
            "value": "[parameters('Timestamp')]"
          },
          "VnetName": {
            "value": "[variables('VnetName')]"
          }
        },
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "Location": {
              "type": "string"
            },
            "ManagedIdentityName": {
              "type": "string"
            },
            "ResourceGroupNames": {
              "type": "array"
            },
            "Timestamp": {
              "type": "string"
            },
            "VnetName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "name": "DnsAndAdminGroup",
              "apiVersion": "2020-10-01",
              "location": "[parameters('Location')]",
              "kind": "AzurePowerShell",
              "identity": {
                "type": "userAssigned",
                "userAssignedIdentities": {
                  "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('ManagedIdentityName'))]": {}
                }
              },
              "properties": {
                "forceUpdateTag": "[parameters('Timestamp')]",
                "azPowerShellVersion": "5.4",
                "arguments": "[concat('-ResourceGroupName ', parameters('resourceGroupNames')[1], ' -VnetName ', parameters('VnetName'))]",
                "scriptContent": "
                  param(
                    [string] [parameter(Mandatory=$true)] $ResourceGroupName, 
                    [string] [parameter(Mandatory=$true)] $VnetName
                  )

                  Start-Sleep 300
                  # Update DNS on the Azure Virtual Network
                  $vnet = Get-AzVirtualNetwork -Name $VnetName -ResourceGroupName $ResourceGroupName
                  $subnet = Get-AzVirtualNetworkSubnetConfig -Name 'AzureADDSSubnet' -VirtualNetwork $vnet

                  if ($null -ne $subnet.IpConfigurations)
                  {
                    $dnsIPs = @()
                    foreach ($ipconfig in $subnet.IpConfigurations) {
                      $RG = $ipconfig.Id.Split('/')[4]
                      $NIC = $ipconfig.Id.Split('/')[8]
                      $IP = (Get-AzNetworkInterface -Name $NIC -ResourceGroupName $RG).IpConfigurations.PrivateIpAddress
                      $dnsIPs += $IP
                    }
                  }
            
                  $obj = new-object -type PSObject -Property @{'DnsServers' = $dnsIPs}
                  $vnet.DhcpOptions = $obj
                  $vnet | Set-AzVirtualNetwork | Out-Null

                  $DeploymentScriptOutputs = @{}
                ",
                "timeout": "PT4H",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D"
              }
            }
          ]
        }
      }
    }
  ]
}
